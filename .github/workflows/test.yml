name: Multi-Version Python Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # Local Python testing with matrix
  test-matrix:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9, '3.10', 3.11, 3.12]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
    
    - name: Run tests
      run: |
        pytest --cov=src/loggrep --cov-report=term --cov-report=xml:coverage_py${{ matrix.python-version }}.xml -v
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: coverage_py${{ matrix.python-version }}.xml
        flags: python${{ matrix.python-version }}
        name: Python ${{ matrix.python-version }}

  # Docker-based testing
  test-docker:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Docker images
      run: |
        docker-compose build
    
    - name: Test Python 3.7
      run: |
        docker-compose run --rm test_py37
    
    - name: Test Python 3.8
      run: |
        docker-compose run --rm test_py38
    
    - name: Test Python 3.9
      run: |
        docker-compose run --rm test_py39
    
    - name: Test Python 3.10
      run: |
        docker-compose run --rm test_py310
    
    - name: Test Python 3.11
      run: |
        docker-compose run --rm test_py311
    
    - name: Test Python 3.12
      run: |
        docker-compose run --rm test_py312

  # Code quality checks
  quality:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: 3.12
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
    
    - name: Run flake8
      run: |
        flake8 src/ tests/
    
    - name: Run mypy
      run: |
        mypy src/
    
    - name: Check code formatting
      run: |
        black --check src/ tests/
        isort --check-only src/ tests/

  # Integration test - ensure the package can be built and installed
  integration:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: 3.12
    
    - name: Build package
      run: |
        python -m pip install --upgrade pip build
        python -m build
    
    - name: Test installation
      run: |
        pip install dist/*.whl
        loggrep --help
        echo "2025-10-11 16:00:00 [ERROR] Test message" | loggrep "ERROR"